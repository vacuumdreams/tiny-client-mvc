{"version":3,"sources":["../../node_modules/browser-pack/_prelude.js","script.min.js","core/app.js","modules/outcome/index.js","modules/outcome/model.js","modules/outcome/response.js","modules/outcome/view.js","script.js","../vendor/mustache.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_moduleOutcome","_moduleOutcome2","_module","_module2","App","this","template","document","getElementById","innerHTML","createModules","getResponse","responseJSON","response","tpl","circleElement","querySelector","dasharray","parseFloat","window","getComputedStyle","forEach","res","module.outcome","module.outcome.response",2,"_moduleOutcome3","_moduleOutcome4","_class","params","model","view","render","module.outcome.model","module.outcome.view",3,"_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","err","Array","isArray","name","_value","getValue","moduleClass","getClassName","_getBreakDown","getBreakDown","breakdown","_getBreakDown2","breakdownBorder","distribution","getDistribution","character","arguments","toString","replace","dotify","toLowerCase","maxValue","diagonal","stepBy","offsetPoints","offsetBorder","closeTag","item","index","join","self","percent","offset","getOffset","cssClass","base",4,"currency","type",5,"_mustache","_mustache2","element","to_html","setTimeout","className","mustache",6,"_app","app",7,"_typeof","constructor","global","factory","nodeName","define","amd","Mustache","isFunction","object","typeStr","escapeRegExp","string","hasProperty","propName","testRegExp","re","regExpTest","isWhitespace","nonSpaceRe","escapeHtml","String","entityMap","parseTemplate","tags","stripSpace","hasTag","nonSpace","spaces","tokens","pop","compileTags","tagsToCompile","split","spaceRe","openingTagRe","RegExp","closingTagRe","closingCurlyRe","sections","start","chr","token","openSection","scanner","Scanner","eos","pos","scanUntil","valueLength","charAt","scan","tagRe","whiteRe","equalsRe","curlyRe","nestTokens","squashTokens","lastToken","squashedTokens","numTokens","section","nestedTokens","collector","tail","Context","parentContext","cache",".","parent","Writer","objectToString","test","&","<",">","\"","'","/","`","=","match","substring","search","lookup","hasOwnProperty","names","context","lookupHit","indexOf","clearCache","parse","partials","renderTokens","originalTemplate","symbol","buffer","renderSection","renderInverted","renderPartial","unescapedValue","escapedValue","rawValue","subRender","j","slice","escape","version","defaultWriter","send","result"],"mappings":"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","file":"script.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _moduleOutcome = require('module.outcome.response');\n\nvar _moduleOutcome2 = _interopRequireDefault(_moduleOutcome);\n\nvar _module = require('module.outcome');\n\nvar _module2 = _interopRequireDefault(_module);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar App = function () {\n\tfunction App() {\n\t\t_classCallCheck(this, App);\n\n\t\tthis.template = document.getElementById('outcome-template').innerHTML;\n\t\tthis.createModules(this.getResponse(), this.template);\n\t}\n\n\t_createClass(App, [{\n\t\tkey: 'getResponse',\n\t\tvalue: function getResponse() {\n\t\t\treturn _moduleOutcome2.default.responseJSON;\n\t\t}\n\t}, {\n\t\tkey: 'createModules',\n\t\tvalue: function createModules(response, tpl) {\n\t\t\tvar circleElement = document.querySelector('.outcome-circle'),\n\t\t\t    dasharray = circleElement ? parseFloat(window.getComputedStyle(circleElement)['stroke-dasharray']) : false;\n\n\t\t\tresponse.forEach(function (res) {\n\t\t\t\tvar outcome = new _module2.default(res, tpl, { 'dasharray': dasharray });\n\t\t\t});\n\t\t}\n\t}]);\n\n\treturn App;\n}();\n\n;\n\nexports.default = new App();\n\n},{\"module.outcome\":2,\"module.outcome.response\":4}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _moduleOutcome = require('module.outcome.model');\n\nvar _moduleOutcome2 = _interopRequireDefault(_moduleOutcome);\n\nvar _moduleOutcome3 = require('module.outcome.view');\n\nvar _moduleOutcome4 = _interopRequireDefault(_moduleOutcome3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _class = function _class(response, template, params) {\n\t_classCallCheck(this, _class);\n\n\tvar model = new _moduleOutcome2.default(response, params),\n\t    view = new _moduleOutcome4.default(model, template);\n\n\tview.render();\n};\n\nexports.default = _class;\n\n},{\"module.outcome.model\":3,\"module.outcome.view\":5}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _class = function () {\n\tfunction _class(response, params) {\n\t\t_classCallCheck(this, _class);\n\n\t\tthis.params = params;\n\t\tthis.name = response.name;\n\t\tthis._value = response.value;\n\t\tthis.value = this.getValue(response.value);\n\t\tthis.moduleClass = this.getClassName(response.name);\n\n\t\tvar _getBreakDown = this.getBreakDown(response.breakdown, params.dasharray);\n\n\t\tvar _getBreakDown2 = _slicedToArray(_getBreakDown, 2);\n\n\t\tthis.breakdown = _getBreakDown2[0];\n\t\tthis.breakdownBorder = _getBreakDown2[1];\n\n\t\tthis.distribution = this.getDistribution(response.distribution, params.dasharray);\n\t}\n\n\t_createClass(_class, [{\n\t\tkey: 'dotify',\n\t\tvalue: function dotify(value) {\n\t\t\tvar character = arguments.length <= 1 || arguments[1] === undefined ? '.' : arguments[1];\n\n\t\t\treturn value.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1' + character);\n\t\t}\n\t}, {\n\t\tkey: 'getValue',\n\t\tvalue: function getValue(value) {\n\t\t\treturn this.dotify(value);\n\t\t}\n\t}, {\n\t\tkey: 'getClassName',\n\t\tvalue: function getClassName(name) {\n\t\t\treturn name.toLowerCase();\n\t\t}\n\t}, {\n\t\tkey: 'getBreakDown',\n\t\tvalue: function getBreakDown(breakdown, dasharray) {\n\t\t\tvar maxValue = 0,\n\t\t\t    diagonal = dasharray / 3.14 * 0.95,\n\t\t\t    stepBy = diagonal / breakdown.length,\n\t\t\t    offsetPoints = [],\n\t\t\t    offsetBorder = [],\n\t\t\t    closeTag = diagonal + ',' + diagonal + ' ' + diagonal * 0.05 + ',' + diagonal;\n\n\t\t\tbreakdown.forEach(function (item) {\n\t\t\t\tif (maxValue < item) {\n\t\t\t\t\tmaxValue = item;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tbreakdown.forEach(function (item, index) {\n\t\t\t\toffsetPoints.push(0.05 * diagonal + stepBy * index + ',' + diagonal * item / maxValue / 1.25);\n\t\t\t\toffsetBorder.push(0.05 * diagonal + stepBy * index + ',' + diagonal * item / maxValue / 1.275);\n\t\t\t});\n\n\t\t\toffsetBorder.push(closeTag);\n\t\t\toffsetPoints.push(closeTag);\n\n\t\t\treturn [offsetPoints.join(' '), offsetBorder.join(' ')];\n\t\t}\n\t}, {\n\t\tkey: 'getDistribution',\n\t\tvalue: function getDistribution(distribution, dasharray) {\n\t\t\tvar self = this;\n\t\t\tdistribution.forEach(function (item) {\n\t\t\t\titem.value = self.dotify(self._value * item.percent / 100);\n\t\t\t\titem.offset = self.getOffset(item.percent, item.cssClass === 'mobile' ? dasharray : -dasharray);\n\t\t\t});\n\n\t\t\treturn distribution;\n\t\t}\n\t}, {\n\t\tkey: 'getOffset',\n\t\tvalue: function getOffset(percent, base) {\n\t\t\treturn base - base * percent / 100;\n\t\t}\n\t}]);\n\n\treturn _class;\n}();\n\nexports.default = _class;\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = {\n\tresponseJSON: [{\n\t\tname: \"Revenue\",\n\t\tvalue: \"200000\",\n\t\tcurrency: \"£\",\n\t\tdistribution: [{\n\t\t\ttype: 'Tablet',\n\t\t\tcssClass: 'tablet',\n\t\t\tpercent: '60'\n\t\t}, {\n\t\t\ttype: 'Smartphone',\n\t\t\tcssClass: 'mobile',\n\t\t\tpercent: '40'\n\t\t}],\n\t\tbreakdown: [\"1200\", \"1400\", \"1450\", \"1400\", \"1350\", \"1500\", \"1450\", \"1550\", \"1700\", \"1750\", \"1650\", \"1700\", \"1800\", \"1750\", \"1900\", \"1850\", \"1820\", \"1880\", \"1920\", \"1860\", \"1830\"]\n\t}, {\n\t\tname: \"Impressions\",\n\t\tvalue: \"50000000\",\n\t\tcurrency: \"\",\n\t\tdistribution: [{\n\t\t\ttype: 'Tablet',\n\t\t\tcssClass: 'tablet',\n\t\t\tpercent: '40'\n\t\t}, {\n\t\t\ttype: 'Smartphone',\n\t\t\tcssClass: 'mobile',\n\t\t\tpercent: '60'\n\t\t}],\n\t\tbreakdown: [\"1830\", \"1860\", \"1920\", \"1880\", \"1350\", \"1820\", \"1900\", \"1750\", \"1800\", \"1700\", \"1650\", \"1750\", \"1850\", \"1550\", \"1450\", \"1700\", \"1500\", \"1400\", \"1450\", \"1400\", \"1200\"]\n\t}, {\n\t\tname: \"Visits\",\n\t\tvalue: \"600000000\",\n\t\tcurrency: \"\",\n\t\tdistribution: [{\n\t\t\ttype: 'Tablet',\n\t\t\tcssClass: 'tablet',\n\t\t\tpercent: '80'\n\t\t}, {\n\t\t\ttype: 'Smartphone',\n\t\t\tcssClass: 'mobile',\n\t\t\tpercent: '20'\n\t\t}],\n\t\tbreakdown: [\"1200\", \"1400\", \"1450\", \"1400\", \"1350\", \"1500\", \"1450\", \"1550\", \"1700\", \"1750\", \"1650\", \"1700\", \"1800\", \"1750\", \"1900\", \"1850\", \"1820\", \"1880\", \"1920\", \"1860\", \"1830\"]\n\t}]\n};\n\n},{}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _mustache = require('mustache');\n\nvar _mustache2 = _interopRequireDefault(_mustache);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _class = function () {\n\tfunction _class(model, template) {\n\t\t_classCallCheck(this, _class);\n\n\t\tthis.model = model;\n\t\tthis.template = template;\n\t\tthis.element = document.getElementById('module-' + model.moduleClass);\n\t}\n\n\t_createClass(_class, [{\n\t\tkey: 'render',\n\t\tvalue: function render() {\n\t\t\tvar self = this;\n\n\t\t\tself.element.innerHTML = _mustache2.default.to_html(self.template, self.model);\n\t\t\tsetTimeout(function () {\n\t\t\t\tself.element.className = self.element.className + ' outcome-' + self.model.moduleClass + ' loaded';\n\t\t\t}, 0);\n\t\t}\n\t}]);\n\n\treturn _class;\n}();\n\nexports.default = _class;\n\n},{\"mustache\":7}],6:[function(require,module,exports){\n'use strict';\n\nvar _app = require('app');\n\nvar _app2 = _interopRequireDefault(_app);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n},{\"app\":1}],7:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\n/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n */\n\n/*global define: false Mustache: true*/\n\n(function defineMustache(global, factory) {\n  if ((typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object' && exports && typeof exports.nodeName !== 'string') {\n    factory(exports); // CommonJS\n  } else if (typeof define === 'function' && define.amd) {\n      define(['exports'], factory); // AMD\n    } else {\n        global.Mustache = {};\n        factory(global.Mustache); // script, wsh, asp\n      }\n})(undefined, function mustacheFactory(mustache) {\n\n  var objectToString = Object.prototype.toString;\n  var isArray = Array.isArray || function isArrayPolyfill(object) {\n    return objectToString.call(object) === '[object Array]';\n  };\n\n  function isFunction(object) {\n    return typeof object === 'function';\n  }\n\n  /**\n   * More correct typeof string handling array\n   * which normally returns typeof 'object'\n   */\n  function typeStr(obj) {\n    return isArray(obj) ? 'array' : typeof obj === 'undefined' ? 'undefined' : _typeof(obj);\n  }\n\n  function escapeRegExp(string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n  }\n\n  /**\n   * Null safe way of checking whether or not an object,\n   * including its prototype, has a given property\n   */\n  function hasProperty(obj, propName) {\n    return obj != null && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && propName in obj;\n  }\n\n  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n  var regExpTest = RegExp.prototype.test;\n  function testRegExp(re, string) {\n    return regExpTest.call(re, string);\n  }\n\n  var nonSpaceRe = /\\S/;\n  function isWhitespace(string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n  };\n\n  function escapeHtml(string) {\n    return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap(s) {\n      return entityMap[s];\n    });\n  }\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var equalsRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices,\n   * respectively, of the token in the original template.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: 1) an\n   * array of tokens in the subtree and 2) the index in the original template at\n   * which the closing tag for that section begins.\n   */\n  function parseTemplate(template, tags) {\n    if (!template) return [];\n\n    var sections = []; // Stack to hold section tokens\n    var tokens = []; // Buffer to hold the tokens\n    var spaces = []; // Indices of whitespace tokens on the current line\n    var hasTag = false; // Is there a {{tag}} on the current line?\n    var nonSpace = false; // Is there a non-space char on the current line?\n\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n    function stripSpace() {\n      if (hasTag && !nonSpace) {\n        while (spaces.length) {\n          delete tokens[spaces.pop()];\n        }\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var openingTagRe, closingTagRe, closingCurlyRe;\n    function compileTags(tagsToCompile) {\n      if (typeof tagsToCompile === 'string') tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2) throw new Error('Invalid tags: ' + tagsToCompile);\n\n      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n      closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n      closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n    }\n\n    compileTags(tags || mustache.tags);\n\n    var scanner = new Scanner(template);\n\n    var start, type, value, chr, token, openSection;\n    while (!scanner.eos()) {\n      start = scanner.pos;\n\n      // Match any text between tags.\n      value = scanner.scanUntil(openingTagRe);\n\n      if (value) {\n        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n          } else {\n            nonSpace = true;\n          }\n\n          tokens.push(['text', chr, start, start + 1]);\n          start += 1;\n\n          // Check for whitespace on the current line.\n          if (chr === '\\n') stripSpace();\n        }\n      }\n\n      // Match the opening tag.\n      if (!scanner.scan(openingTagRe)) break;\n\n      hasTag = true;\n\n      // Get the tag type.\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe);\n\n      // Get the tag value.\n      if (type === '=') {\n        value = scanner.scanUntil(equalsRe);\n        scanner.scan(equalsRe);\n        scanner.scanUntil(closingTagRe);\n      } else if (type === '{') {\n        value = scanner.scanUntil(closingCurlyRe);\n        scanner.scan(curlyRe);\n        scanner.scanUntil(closingTagRe);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(closingTagRe);\n      }\n\n      // Match the closing tag.\n      if (!scanner.scan(closingTagRe)) throw new Error('Unclosed tag at ' + scanner.pos);\n\n      token = [type, value, start, scanner.pos];\n      tokens.push(token);\n\n      if (type === '#' || type === '^') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n\n        if (!openSection) throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n        if (openSection[1] !== value) throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      } else if (type === '=') {\n        // Set the tags for the next time around.\n        compileTags(value);\n      }\n    }\n\n    // Make sure there are no open sections when we're done.\n    openSection = sections.pop();\n\n    if (openSection) throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n    return nestTokens(squashTokens(tokens));\n  }\n\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n  function squashTokens(tokens) {\n    var squashedTokens = [];\n\n    var token, lastToken;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n  function nestTokens(tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n\n    var token, section;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n        case '#':\n        case '^':\n          collector.push(token);\n          sections.push(token);\n          collector = token[4] = [];\n          break;\n        case '/':\n          section = sections.pop();\n          section[5] = token[2];\n          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n          break;\n        default:\n          collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n  function Scanner(string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n  Scanner.prototype.eos = function eos() {\n    return this.tail === '';\n  };\n\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n  Scanner.prototype.scan = function scan(re) {\n    var match = this.tail.match(re);\n\n    if (!match || match.index !== 0) return '';\n\n    var string = match[0];\n\n    this.tail = this.tail.substring(string.length);\n    this.pos += string.length;\n\n    return string;\n  };\n\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n  Scanner.prototype.scanUntil = function scanUntil(re) {\n    var index = this.tail.search(re),\n        match;\n\n    switch (index) {\n      case -1:\n        match = this.tail;\n        this.tail = '';\n        break;\n      case 0:\n        match = '';\n        break;\n      default:\n        match = this.tail.substring(0, index);\n        this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n\n    return match;\n  };\n\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n  function Context(view, parentContext) {\n    this.view = view;\n    this.cache = { '.': this.view };\n    this.parent = parentContext;\n  }\n\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n  Context.prototype.push = function push(view) {\n    return new Context(view, this);\n  };\n\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n  Context.prototype.lookup = function lookup(name) {\n    var cache = this.cache;\n\n    var value;\n    if (cache.hasOwnProperty(name)) {\n      value = cache[name];\n    } else {\n      var context = this,\n          names,\n          index,\n          lookupHit = false;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          value = context.view;\n          names = name.split('.');\n          index = 0;\n\n          /**\n           * Using the dot notion path in `name`, we descend through the\n           * nested objects.\n           *\n           * To be certain that the lookup has been successful, we have to\n           * check if the last object in the path actually has the property\n           * we are looking for. We store the result in `lookupHit`.\n           *\n           * This is specially necessary for when the value has been set to\n           * `undefined` and we want to avoid looking up parent contexts.\n           **/\n          while (value != null && index < names.length) {\n            if (index === names.length - 1) lookupHit = hasProperty(value, names[index]);\n\n            value = value[names[index++]];\n          }\n        } else {\n          value = context.view[name];\n          lookupHit = hasProperty(context.view, name);\n        }\n\n        if (lookupHit) break;\n\n        context = context.parent;\n      }\n\n      cache[name] = value;\n    }\n\n    if (isFunction(value)) value = value.call(this.view);\n\n    return value;\n  };\n\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n  function Writer() {\n    this.cache = {};\n  }\n\n  /**\n   * Clears all cached templates in this writer.\n   */\n  Writer.prototype.clearCache = function clearCache() {\n    this.cache = {};\n  };\n\n  /**\n   * Parses and caches the given `template` and returns the array of tokens\n   * that is generated from the parse.\n   */\n  Writer.prototype.parse = function parse(template, tags) {\n    var cache = this.cache;\n    var tokens = cache[template];\n\n    if (tokens == null) tokens = cache[template] = parseTemplate(template, tags);\n\n    return tokens;\n  };\n\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   */\n  Writer.prototype.render = function render(template, view, partials) {\n    var tokens = this.parse(template);\n    var context = view instanceof Context ? view : new Context(view);\n    return this.renderTokens(tokens, context, partials, template);\n  };\n\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n  Writer.prototype.renderTokens = function renderTokens(tokens, context, partials, originalTemplate) {\n    var buffer = '';\n\n    var token, symbol, value;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      value = undefined;\n      token = tokens[i];\n      symbol = token[0];\n\n      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);else if (symbol === '>') value = this.renderPartial(token, context, partials, originalTemplate);else if (symbol === '&') value = this.unescapedValue(token, context);else if (symbol === 'name') value = this.escapedValue(token, context);else if (symbol === 'text') value = this.rawValue(token);\n\n      if (value !== undefined) buffer += value;\n    }\n\n    return buffer;\n  };\n\n  Writer.prototype.renderSection = function renderSection(token, context, partials, originalTemplate) {\n    var self = this;\n    var buffer = '';\n    var value = context.lookup(token[1]);\n\n    // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n    function subRender(template) {\n      return self.render(template, context, partials);\n    }\n\n    if (!value) return;\n\n    if (isArray(value)) {\n      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n      }\n    } else if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' || typeof value === 'string' || typeof value === 'number') {\n      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n    } else if (isFunction(value)) {\n      if (typeof originalTemplate !== 'string') throw new Error('Cannot use higher-order sections without the original template');\n\n      // Extract the portion of the original template that the section contains.\n      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n      if (value != null) buffer += value;\n    } else {\n      buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n    }\n    return buffer;\n  };\n\n  Writer.prototype.renderInverted = function renderInverted(token, context, partials, originalTemplate) {\n    var value = context.lookup(token[1]);\n\n    // Use JavaScript's definition of falsy. Include empty arrays.\n    // See https://github.com/janl/mustache.js/issues/186\n    if (!value || isArray(value) && value.length === 0) return this.renderTokens(token[4], context, partials, originalTemplate);\n  };\n\n  Writer.prototype.renderPartial = function renderPartial(token, context, partials) {\n    if (!partials) return;\n\n    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n    if (value != null) return this.renderTokens(this.parse(value), context, partials, value);\n  };\n\n  Writer.prototype.unescapedValue = function unescapedValue(token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null) return value;\n  };\n\n  Writer.prototype.escapedValue = function escapedValue(token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null) return mustache.escape(value);\n  };\n\n  Writer.prototype.rawValue = function rawValue(token) {\n    return token[1];\n  };\n\n  mustache.name = 'mustache.js';\n  mustache.version = '2.2.1';\n  mustache.tags = ['{{', '}}'];\n\n  // All high-level mustache.* functions use this writer.\n  var defaultWriter = new Writer();\n\n  /**\n   * Clears all cached templates in the default writer.\n   */\n  mustache.clearCache = function clearCache() {\n    return defaultWriter.clearCache();\n  };\n\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n  mustache.parse = function parse(template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n\n  /**\n   * Renders the `template` with the given `view` and `partials` using the\n   * default writer.\n   */\n  mustache.render = function render(template, view, partials) {\n    if (typeof template !== 'string') {\n      throw new TypeError('Invalid template! Template should be a \"string\" ' + 'but \"' + typeStr(template) + '\" was given as the first ' + 'argument for mustache#render(template, view, partials)');\n    }\n\n    return defaultWriter.render(template, view, partials);\n  };\n\n  // This is here for backwards compatibility with 0.4.x.,\n  /*eslint-disable */ // eslint wants camel cased function name\n  mustache.to_html = function to_html(template, view, partials, send) {\n    /*eslint-enable*/\n\n    var result = mustache.render(template, view, partials);\n\n    if (isFunction(send)) {\n      send(result);\n    } else {\n      return result;\n    }\n  };\n\n  // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n  mustache.escape = escapeHtml;\n\n  // Export these mainly for testing, but also for advanced usage.\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n});\n\n},{}]},{},[6])\n\n","import response from 'module.outcome.response';\nimport Outcome from 'module.outcome';\n\nclass App {\n\tconstructor() {\n\t\tthis.template = document.getElementById('outcome-template').innerHTML;\n\t\tthis.createModules(this.getResponse(), this.template);\n\t}\n\n\tgetResponse() {\n\t\treturn response.responseJSON;\n\t}\n\n\tcreateModules(response, tpl) {\n\t\tlet circleElement = document.querySelector('.outcome-circle'),\n\t\t\tdasharray = (circleElement) ? parseFloat(window.getComputedStyle(circleElement)['stroke-dasharray']) : false;\n\n\t\tresponse.forEach((res) => {\n\t\t\tlet outcome = new Outcome(res, tpl, { 'dasharray': dasharray });\n\t\t});\n\t}\n};\n\nexport default new App();","import Model from 'module.outcome.model';\nimport View from 'module.outcome.view';\n\nexport default class {\n\tconstructor(response, template, params) {\n\t\tlet model = new Model(response, params),\n\t\t\tview = new View(model, template);\n\n\t\tview.render();\n\t}\n}","export default class {\n\tconstructor(response, params) {\n\t\tthis.params = params;\n\t\tthis.name = response.name;\n\t\tthis._value = response.value;\n\t\tthis.value = this.getValue(response.value);\n\t\tthis.moduleClass = this.getClassName(response.name);\n\t\t[this.breakdown, this.breakdownBorder] = this.getBreakDown(response.breakdown, params.dasharray);\n\t\tthis.distribution = this.getDistribution(response.distribution, params.dasharray);\n\t}\n\n\tdotify(value, character = '.') {\n\t\treturn value.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, `$1${character}`);\n\t}\n\n\tgetValue(value) {\n\t\treturn this.dotify(value);\n\t}\n\n\tgetClassName(name) {\n\t\treturn name.toLowerCase();\n\t}\n\n\tgetBreakDown(breakdown, dasharray) {\n\t\tlet maxValue = 0,\n\t\t\tdiagonal = (dasharray / 3.14) * 0.95,\n\t\t\tstepBy = diagonal / breakdown.length,\n\t\t\toffsetPoints = [],\n\t\t\toffsetBorder = [],\n\t\t\tcloseTag = `${diagonal},${diagonal} ${diagonal * 0.05},${diagonal}`;\n\n\t\tbreakdown.forEach((item) => {\n\t\t\tif (maxValue < item) {\n\t\t\t\tmaxValue = item;\n\t\t\t}\n\t\t});\n\n\t\tbreakdown.forEach((item, index) => {\n\t\t\toffsetPoints.push(`${0.05 * diagonal + (stepBy * index)},${diagonal * item / maxValue / 1.25}`);\n\t\t\toffsetBorder.push(`${0.05 * diagonal + (stepBy * index)},${diagonal * item / maxValue / 1.275}`);\n\t\t});\n\n\t\toffsetBorder.push(closeTag);\n\t\toffsetPoints.push(closeTag);\n\n\t\treturn [offsetPoints.join(' '), offsetBorder.join(' ')];\n\t}\n\n\tgetDistribution(distribution, dasharray) {\n\t\tlet self = this;\n\t\tdistribution.forEach((item) => {\n\t\t\titem.value = self.dotify(self._value * item.percent / 100);\n\t\t\titem.offset = self.getOffset(item.percent, (item.cssClass === 'mobile') ? dasharray : -dasharray);\n\t\t});\n\n\t\treturn distribution;\n\t}\n\n\tgetOffset(percent, base) {\n\t\treturn base - (base * percent / 100);\n\t}\n}","export default {\n\tresponseJSON: [\n\t\t{\n\t\t\tname: \"Revenue\",\n\t\t\tvalue: \"200000\",\n\t\t\tcurrency: \"£\",\n\t\t\tdistribution: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'Tablet',\n\t\t\t\t\tcssClass: 'tablet',\n\t\t\t\t\tpercent: '60'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'Smartphone',\n\t\t\t\t\tcssClass: 'mobile',\n\t\t\t\t\tpercent: '40'\n\t\t\t\t}\n\t\t\t],\n\t\t\tbreakdown: [\n\t\t\t\t\"1200\",\n\t\t\t\t\"1400\",\n\t\t\t\t\"1450\",\n\t\t\t\t\"1400\",\n\t\t\t\t\"1350\",\n\t\t\t\t\"1500\",\n\t\t\t\t\"1450\",\n\t\t\t\t\"1550\",\n\t\t\t\t\"1700\",\n\t\t\t\t\"1750\",\n\t\t\t\t\"1650\",\n\t\t\t\t\"1700\",\n\t\t\t\t\"1800\",\n\t\t\t\t\"1750\",\n\t\t\t\t\"1900\",\n\t\t\t\t\"1850\",\n\t\t\t\t\"1820\",\n\t\t\t\t\"1880\",\n\t\t\t\t\"1920\",\n\t\t\t\t\"1860\",\n\t\t\t\t\"1830\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tname: \"Impressions\",\n\t\t\tvalue: \"50000000\",\n\t\t\tcurrency: \"\",\n\t\t\tdistribution: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'Tablet',\n\t\t\t\t\tcssClass: 'tablet',\n\t\t\t\t\tpercent: '40'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'Smartphone',\n\t\t\t\t\tcssClass: 'mobile',\n\t\t\t\t\tpercent: '60'\n\t\t\t\t}\n\t\t\t],\n\t\t\tbreakdown: [\n\t\t\t\t\"1830\",\n\t\t\t\t\"1860\",\n\t\t\t\t\"1920\",\n\t\t\t\t\"1880\",\n\t\t\t\t\"1350\",\n\t\t\t\t\"1820\",\n\t\t\t\t\"1900\",\n\t\t\t\t\"1750\",\n\t\t\t\t\"1800\",\n\t\t\t\t\"1700\",\n\t\t\t\t\"1650\",\n\t\t\t\t\"1750\",\n\t\t\t\t\"1850\",\n\t\t\t\t\"1550\",\n\t\t\t\t\"1450\",\n\t\t\t\t\"1700\",\n\t\t\t\t\"1500\",\n\t\t\t\t\"1400\",\n\t\t\t\t\"1450\",\n\t\t\t\t\"1400\",\n\t\t\t\t\"1200\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tname: \"Visits\",\n\t\t\tvalue: \"600000000\",\n\t\t\tcurrency: \"\",\n\t\t\tdistribution: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'Tablet',\n\t\t\t\t\tcssClass: 'tablet',\n\t\t\t\t\tpercent: '80'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'Smartphone',\n\t\t\t\t\tcssClass: 'mobile',\n\t\t\t\t\tpercent: '20'\n\t\t\t\t}\n\t\t\t],\n\t\t\tbreakdown: [\n\t\t\t\t\"1200\",\n\t\t\t\t\"1400\",\n\t\t\t\t\"1450\",\n\t\t\t\t\"1400\",\n\t\t\t\t\"1350\",\n\t\t\t\t\"1500\",\n\t\t\t\t\"1450\",\n\t\t\t\t\"1550\",\n\t\t\t\t\"1700\",\n\t\t\t\t\"1750\",\n\t\t\t\t\"1650\",\n\t\t\t\t\"1700\",\n\t\t\t\t\"1800\",\n\t\t\t\t\"1750\",\n\t\t\t\t\"1900\",\n\t\t\t\t\"1850\",\n\t\t\t\t\"1820\",\n\t\t\t\t\"1880\",\n\t\t\t\t\"1920\",\n\t\t\t\t\"1860\",\n\t\t\t\t\"1830\"\n\t\t\t]\n\t\t}\n\t]\n}","import tplService from 'mustache';\n\nexport default class {\n\tconstructor(model, template) {\n\t\tthis.model = model;\n\t\tthis.template = template;\n\t\tthis.element = document.getElementById(`module-${model.moduleClass}`);\n\t}\n\n\trender() {\n\t\tlet self = this;\n\n\t\tself.element.innerHTML = tplService.to_html(self.template, self.model);\n\t\tsetTimeout(() => {\n\t\t\tself.element.className = `${self.element.className} outcome-${self.model.moduleClass} loaded`;\n\t\t}, 0);\n\t\t\n\t}\n}","import app from 'app';","/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n */\n\n/*global define: false Mustache: true*/\n\n(function defineMustache (global, factory) {\n  if (typeof exports === 'object' && exports && typeof exports.nodeName !== 'string') {\n    factory(exports); // CommonJS\n  } else if (typeof define === 'function' && define.amd) {\n    define(['exports'], factory); // AMD\n  } else {\n    global.Mustache = {};\n    factory(global.Mustache); // script, wsh, asp\n  }\n}(this, function mustacheFactory (mustache) {\n\n  var objectToString = Object.prototype.toString;\n  var isArray = Array.isArray || function isArrayPolyfill (object) {\n    return objectToString.call(object) === '[object Array]';\n  };\n\n  function isFunction (object) {\n    return typeof object === 'function';\n  }\n\n  /**\n   * More correct typeof string handling array\n   * which normally returns typeof 'object'\n   */\n  function typeStr (obj) {\n    return isArray(obj) ? 'array' : typeof obj;\n  }\n\n  function escapeRegExp (string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n  }\n\n  /**\n   * Null safe way of checking whether or not an object,\n   * including its prototype, has a given property\n   */\n  function hasProperty (obj, propName) {\n    return obj != null && typeof obj === 'object' && (propName in obj);\n  }\n\n  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n  var regExpTest = RegExp.prototype.test;\n  function testRegExp (re, string) {\n    return regExpTest.call(re, string);\n  }\n\n  var nonSpaceRe = /\\S/;\n  function isWhitespace (string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n  };\n\n  function escapeHtml (string) {\n    return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap (s) {\n      return entityMap[s];\n    });\n  }\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var equalsRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices,\n   * respectively, of the token in the original template.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: 1) an\n   * array of tokens in the subtree and 2) the index in the original template at\n   * which the closing tag for that section begins.\n   */\n  function parseTemplate (template, tags) {\n    if (!template)\n      return [];\n\n    var sections = [];     // Stack to hold section tokens\n    var tokens = [];       // Buffer to hold the tokens\n    var spaces = [];       // Indices of whitespace tokens on the current line\n    var hasTag = false;    // Is there a {{tag}} on the current line?\n    var nonSpace = false;  // Is there a non-space char on the current line?\n\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n    function stripSpace () {\n      if (hasTag && !nonSpace) {\n        while (spaces.length)\n          delete tokens[spaces.pop()];\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var openingTagRe, closingTagRe, closingCurlyRe;\n    function compileTags (tagsToCompile) {\n      if (typeof tagsToCompile === 'string')\n        tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n        throw new Error('Invalid tags: ' + tagsToCompile);\n\n      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n      closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n      closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n    }\n\n    compileTags(tags || mustache.tags);\n\n    var scanner = new Scanner(template);\n\n    var start, type, value, chr, token, openSection;\n    while (!scanner.eos()) {\n      start = scanner.pos;\n\n      // Match any text between tags.\n      value = scanner.scanUntil(openingTagRe);\n\n      if (value) {\n        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n          } else {\n            nonSpace = true;\n          }\n\n          tokens.push([ 'text', chr, start, start + 1 ]);\n          start += 1;\n\n          // Check for whitespace on the current line.\n          if (chr === '\\n')\n            stripSpace();\n        }\n      }\n\n      // Match the opening tag.\n      if (!scanner.scan(openingTagRe))\n        break;\n\n      hasTag = true;\n\n      // Get the tag type.\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe);\n\n      // Get the tag value.\n      if (type === '=') {\n        value = scanner.scanUntil(equalsRe);\n        scanner.scan(equalsRe);\n        scanner.scanUntil(closingTagRe);\n      } else if (type === '{') {\n        value = scanner.scanUntil(closingCurlyRe);\n        scanner.scan(curlyRe);\n        scanner.scanUntil(closingTagRe);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(closingTagRe);\n      }\n\n      // Match the closing tag.\n      if (!scanner.scan(closingTagRe))\n        throw new Error('Unclosed tag at ' + scanner.pos);\n\n      token = [ type, value, start, scanner.pos ];\n      tokens.push(token);\n\n      if (type === '#' || type === '^') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n\n        if (!openSection)\n          throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n        if (openSection[1] !== value)\n          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      } else if (type === '=') {\n        // Set the tags for the next time around.\n        compileTags(value);\n      }\n    }\n\n    // Make sure there are no open sections when we're done.\n    openSection = sections.pop();\n\n    if (openSection)\n      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n    return nestTokens(squashTokens(tokens));\n  }\n\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n  function squashTokens (tokens) {\n    var squashedTokens = [];\n\n    var token, lastToken;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n  function nestTokens (tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n\n    var token, section;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n        case '#':\n        case '^':\n          collector.push(token);\n          sections.push(token);\n          collector = token[4] = [];\n          break;\n        case '/':\n          section = sections.pop();\n          section[5] = token[2];\n          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n          break;\n        default:\n          collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n  function Scanner (string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n  Scanner.prototype.eos = function eos () {\n    return this.tail === '';\n  };\n\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n  Scanner.prototype.scan = function scan (re) {\n    var match = this.tail.match(re);\n\n    if (!match || match.index !== 0)\n      return '';\n\n    var string = match[0];\n\n    this.tail = this.tail.substring(string.length);\n    this.pos += string.length;\n\n    return string;\n  };\n\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n  Scanner.prototype.scanUntil = function scanUntil (re) {\n    var index = this.tail.search(re), match;\n\n    switch (index) {\n      case -1:\n        match = this.tail;\n        this.tail = '';\n        break;\n      case 0:\n        match = '';\n        break;\n      default:\n        match = this.tail.substring(0, index);\n        this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n\n    return match;\n  };\n\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n  function Context (view, parentContext) {\n    this.view = view;\n    this.cache = { '.': this.view };\n    this.parent = parentContext;\n  }\n\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n  Context.prototype.push = function push (view) {\n    return new Context(view, this);\n  };\n\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n  Context.prototype.lookup = function lookup (name) {\n    var cache = this.cache;\n\n    var value;\n    if (cache.hasOwnProperty(name)) {\n      value = cache[name];\n    } else {\n      var context = this, names, index, lookupHit = false;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          value = context.view;\n          names = name.split('.');\n          index = 0;\n\n          /**\n           * Using the dot notion path in `name`, we descend through the\n           * nested objects.\n           *\n           * To be certain that the lookup has been successful, we have to\n           * check if the last object in the path actually has the property\n           * we are looking for. We store the result in `lookupHit`.\n           *\n           * This is specially necessary for when the value has been set to\n           * `undefined` and we want to avoid looking up parent contexts.\n           **/\n          while (value != null && index < names.length) {\n            if (index === names.length - 1)\n              lookupHit = hasProperty(value, names[index]);\n\n            value = value[names[index++]];\n          }\n        } else {\n          value = context.view[name];\n          lookupHit = hasProperty(context.view, name);\n        }\n\n        if (lookupHit)\n          break;\n\n        context = context.parent;\n      }\n\n      cache[name] = value;\n    }\n\n    if (isFunction(value))\n      value = value.call(this.view);\n\n    return value;\n  };\n\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n  function Writer () {\n    this.cache = {};\n  }\n\n  /**\n   * Clears all cached templates in this writer.\n   */\n  Writer.prototype.clearCache = function clearCache () {\n    this.cache = {};\n  };\n\n  /**\n   * Parses and caches the given `template` and returns the array of tokens\n   * that is generated from the parse.\n   */\n  Writer.prototype.parse = function parse (template, tags) {\n    var cache = this.cache;\n    var tokens = cache[template];\n\n    if (tokens == null)\n      tokens = cache[template] = parseTemplate(template, tags);\n\n    return tokens;\n  };\n\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   */\n  Writer.prototype.render = function render (template, view, partials) {\n    var tokens = this.parse(template);\n    var context = (view instanceof Context) ? view : new Context(view);\n    return this.renderTokens(tokens, context, partials, template);\n  };\n\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n  Writer.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate) {\n    var buffer = '';\n\n    var token, symbol, value;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      value = undefined;\n      token = tokens[i];\n      symbol = token[0];\n\n      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);\n      else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);\n      else if (symbol === '>') value = this.renderPartial(token, context, partials, originalTemplate);\n      else if (symbol === '&') value = this.unescapedValue(token, context);\n      else if (symbol === 'name') value = this.escapedValue(token, context);\n      else if (symbol === 'text') value = this.rawValue(token);\n\n      if (value !== undefined)\n        buffer += value;\n    }\n\n    return buffer;\n  };\n\n  Writer.prototype.renderSection = function renderSection (token, context, partials, originalTemplate) {\n    var self = this;\n    var buffer = '';\n    var value = context.lookup(token[1]);\n\n    // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n    function subRender (template) {\n      return self.render(template, context, partials);\n    }\n\n    if (!value) return;\n\n    if (isArray(value)) {\n      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n      }\n    } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n    } else if (isFunction(value)) {\n      if (typeof originalTemplate !== 'string')\n        throw new Error('Cannot use higher-order sections without the original template');\n\n      // Extract the portion of the original template that the section contains.\n      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n      if (value != null)\n        buffer += value;\n    } else {\n      buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n    }\n    return buffer;\n  };\n\n  Writer.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate) {\n    var value = context.lookup(token[1]);\n\n    // Use JavaScript's definition of falsy. Include empty arrays.\n    // See https://github.com/janl/mustache.js/issues/186\n    if (!value || (isArray(value) && value.length === 0))\n      return this.renderTokens(token[4], context, partials, originalTemplate);\n  };\n\n  Writer.prototype.renderPartial = function renderPartial (token, context, partials) {\n    if (!partials) return;\n\n    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n    if (value != null)\n      return this.renderTokens(this.parse(value), context, partials, value);\n  };\n\n  Writer.prototype.unescapedValue = function unescapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return value;\n  };\n\n  Writer.prototype.escapedValue = function escapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return mustache.escape(value);\n  };\n\n  Writer.prototype.rawValue = function rawValue (token) {\n    return token[1];\n  };\n\n  mustache.name = 'mustache.js';\n  mustache.version = '2.2.1';\n  mustache.tags = [ '{{', '}}' ];\n\n  // All high-level mustache.* functions use this writer.\n  var defaultWriter = new Writer();\n\n  /**\n   * Clears all cached templates in the default writer.\n   */\n  mustache.clearCache = function clearCache () {\n    return defaultWriter.clearCache();\n  };\n\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n  mustache.parse = function parse (template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n\n  /**\n   * Renders the `template` with the given `view` and `partials` using the\n   * default writer.\n   */\n  mustache.render = function render (template, view, partials) {\n    if (typeof template !== 'string') {\n      throw new TypeError('Invalid template! Template should be a \"string\" ' +\n                          'but \"' + typeStr(template) + '\" was given as the first ' +\n                          'argument for mustache#render(template, view, partials)');\n    }\n\n    return defaultWriter.render(template, view, partials);\n  };\n\n  // This is here for backwards compatibility with 0.4.x.,\n  /*eslint-disable */ // eslint wants camel cased function name\n  mustache.to_html = function to_html (template, view, partials, send) {\n    /*eslint-enable*/\n\n    var result = mustache.render(template, view, partials);\n\n    if (isFunction(send)) {\n      send(result);\n    } else {\n      return result;\n    }\n  };\n\n  // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n  mustache.escape = escapeHtml;\n\n  // Export these mainly for testing, but also for advanced usage.\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n\n}));\n"],"sourceRoot":"/source/"}